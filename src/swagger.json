{
  "openapi": "3.0.0",
  "info": {
    "title": "Kenzie Pizzas API",
    "description": "Lista com as rotas da API, projeto do capstone Q4 utilizando Node.js.",
    "contact": {
      "name": "API Ajuda",
      "url": "http://www.kenzie-pizza.com/support",
      "email": "kenzie-pizza@email.com"
    },
    "version": "1.0.0"
  },

  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "local."
    },
    {
      "url": "https://capstone-nodejs.herokuapp.com/",
      "description": "production."
    }
  ],

  "paths": {
    "/users": {
      "post": {
        "summary": "Cadastro de usuário",
        "description": "Essa rota é responsável por cadastrar um usuário.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUser" }
            }
          }
        },
        "responses": {
          "400": {
            "description": "E-mail already registered."
          },
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/NewUser"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Lista todos os usuários",
        "description": "Essa rota é responsável por listar todos os usuários (Somente Administrador).",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "401": {
            "description": "Missing authorization headers."
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ArrayOfUsers"
                }
              }
            }
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "summary": "Buscar um usuário",
        "description": "Essa rota é responsável por buscar um usuário.",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "400": {
            "description": "JWT Expired or sended in a wrong way."
          },
          "401": {
            "description": "Missing authorization headers."
          },
          "404": { "description": "User not found." },

          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualiza um usuário",
        "description": "Essa rota é responsável por atualizar um usuário.",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Kenzie Update" },
                  "email": {
                    "type": "string",
                    "example": "kenzie-updadte@email.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "'JWT Expired or sended in a wrong way', 'User not found.'."
          },
          "401": {
            "description": "JWT is missing."
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UpdateUser"
                }
              }
            }
          }
        }
      }
    },
    "/users/disable": {
      "post": {
        "summary": "Desativa um usuário",
        "description": "Essa rota é responsável por desativar um usuário.",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "400": {
            "description": "'JWT Expired or sended in a wrong way', 'User not found.'."
          },
          "404": { "description": "User not found."},
          "401": {
            "description": "JWT is missing."
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/DisableUser"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Acessar uma conta de usuário",
        "description": "Essa rota é responsável por fazer o login do usuário.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginUser" }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Wrong email/password."
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "examples": {
                  "token": {
                    "value": {
                      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI0YmVhMTVmZS0wNjBkLTRjZTktOWQ5Zi0zOTExODY2NDU5ODUiLCJpYXQiOjE2NDI5NzM3MzAsImV4cCI6MTY0MzA2MDEzMH0.Ueub42ZjYvFh7moPn0pez49NxfFSWWV5ovg6cebLcGk"
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": { "token": { "type": "string" } }
                }
              }
            }
          }
        }
      }
    },
    "/update_adm": {
      "patch": {
        "summary": "Atualiza um usuário para o tipo administrador",
        "description": "Essa rota é responsável por atualizar a conta do usuário para administrador (Somente Administrador).",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "kenzie@teste.com" },
                  "isAdm": { "type": "boolean", "example": true }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "JWT Expired or sended in a wrong way."
          },
          "401": {
            "description": "JWT is missing."
          },
          "404": { "description": "User not found." },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserAdm"
                }
              }
            }
          }
        }
      }
    },


    "/recovery": {
      "post": {
        "summary": "Solicita mudança de senha",
        "description": "Essa rota é responsável por trocar a senha, enviando um token no email do usuário..",
        "tags": ["Passwords"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "default": "example@email.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Error while sending the email."
          },
          "200": {
            "description": "Token sendded to your email.."
          }
        }
      }
    },
    "/change_password": {
      "post": {
        "summary": "Realiza a troca da senha do usuário.",
        "description": "Essa rota é responsável por efetuar a troca de senha..",
        "tags": ["Passwords"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewPassword" }
            }
          }
        },
        "responses": {
          "400": {
            "description": "'E-mail already registered', 'User does not exist', 'Password and Confirmation don't match.'."
          },
          "200": {
            "description": "Password updated.."
          }
        }
      }
    },

    "/product": {
      "post": {
        "summary": "Cadastro de produto",
        "description": "Essa rota é responsável por cadastrar um produto (Somente Administrador).",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "'Missing admin permissions', 'JWT Expired or sended in a wrong way'."
          },
          "401": {
            "description": "Unauthorized."
          },
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Lista todos os produtos",
        "description": "Essa rota é responsável por listar todos os produtos.",
        "tags": ["Products"],
        "responses": {
          "401": {
            "description": "Missing authorization headers."
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/ArrayOfProducts"
                }
              }
            }
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "summary": "Buscar um produto",
        "description": "Essa rota é responsável por buscar um produto..",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do produto.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualiza um produto",
        "description": "Essa rota é responsável por atualizar um produto (Somente Administrador)..",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UpdateProduct"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "JWT Expired or sended in a wrong way."
          },
          "401": {
            "description": "JWT is missing."
          },
          "404": { "description": "Product not found."},
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "id": "073273f2-1984-4d1f-8326-1411880dc7b4",
                    "name": "Pizza de Atum",
                    "description": "Atum desfiado, molho de tomate.",
                    "price": 45,
                    "created_at": "2022-01-24T21:37:17.251Z",
                    "updated_at": "2022-01-24T21:37:17.251Z"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deleta um produto",
        "description": "Essa rota é responsável por deletar um produto (Somente Administrador)..",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do carrinho.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "400": {
            "description": "'JWT Expired or sended in a wrong way', 'Product not found'."
          },
          "401": {
            "description": "JWT is missing."
          },
          "204": {
            "description": "No body returned for response."
          }
        }
      }
    },


    "/order": {
      "post": {
        "summary": "Realiza uma compra",
        "description": "Essa rota é responsável por finalizar uma compra.",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/NewOrder"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "JWT Expired or sended in a wrong way."
          },
          "401": {
            "description": "JWT is missing."
          },
          "404": { "description": "Product not found."},
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Lista todas as compras",
        "description": "Essa rota é responsável por listar todas as compras (Somente Administrador).",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "401": {
            "description": "Missing admin permissions."
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/ArrayOfOrders"
                }
              }
            }
          }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "summary": "Buscar uma compra",
        "description": "Essa rota é responsável por buscar uma compra.",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da compra.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/order"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualiza o status de uma compra",
        "description": "Essa rota é responsável por atualizar o andamento de uma compra (Somente Administrador).",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da compra.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string", "default": "failed" }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "'JWT Expired or sended in a wrong way', 'Product not found'."
          },
          "401": {
            "description": "JWT is missing."
          },
          "404": { "description": "Not found any Order with this id."},
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UpdateOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deleta uma compra",
        "description": "Essa rota é responsável por deletar uma compra.",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da compra.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "400": {
            "description": "JWT Expired or sended in a wrong way."
          },
          "401": {
            "description": "JWT is missing."
          },
          "404": { "description": "Order not found."},
          "204": {
            "description": "No body returned for response."
          }
        }
      }
    },


    "/addresses": {
      "post": {
        "summary": "Realiza a criação de um endereço",
        "description": "Essa rota é responsável por adicionar um endereço.",
        "tags": ["Addresses"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/NewAddress"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "JWT Expired or sended in a wrong way."
          },
          "401": {
            "description": "JWT is missing."
          },
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Lista todos os endereços",
        "description": "Essa rota é responsável por listar todos os endereços.",
        "tags": ["Addresses"],
        "responses": {
          "400": {
            "description": "JWT Expired or sended in a wrong way."
          },
          "401": {
            "description": "JWT is missing."
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/ArrayOfAddresses"
                }
              }
            }
          }
        }
      }
    },
    "/addresses/{id}": {
      "get": {
        "summary": "Buscar um endereço",
        "description": "Essa rota é responsável por buscar um endereço.",
        "tags": ["Addresses"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do endereço.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "400": {
            "description": "JWT Expired or sended in a wrong way."
          },
          "401": {
            "description": "JWT is missing."
          },
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualiza um endereço",
        "description": "Essa rota é responsável por atualizar um endereço.",
        "tags": ["Addresses"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do endereço.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "city": { "type": "string", "example": "cidade update" },
                  "street": { "type": "string", "example": "rua update" },
                  "number": { "type": "string", "example": 42 }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "'JWT Expired or sended in a wrong way', 'Product not found'."
          },
          "401": {
            "description": "JWT is missing."
          },
          "404": { "description": "Address not found."},
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UpdateAddress"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deleta um endereço",
        "description": "Essa rota é responsável por deletar um endereço.",
        "tags": ["Addresses"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do endereço.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "400": {
            "description": "JWT Expired or sended in a wrong way."
          },
          "401": {
            "description": "JWT is missing."
          },
          "404": { "description": "Address not found."},
          "204": {
            "description": "No body returned for response."
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "LoginUser": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "default": "example@email.com"
          },
          "password": {
            "type": "string",
            "default": "1234abcd"
          }
        },
        "example": {
          "email": "kenzie@email.com",
          "password": "abcd1234"
        }
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "example": {
          "name": "Kenzie Teste",
          "email": "kenzie@email.com",
          "password": "abcd1234"
        }
      },
      "NewUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time "
          },
          "updated_at": {
            "type": "string",
            "format": "date-time "
          }
        },
        "example": {
          "name": "Kenzie Teste",
          "email": "kenzie@email.com",
          "id": "9abb39a7-eb41-42ca-9c94-81a9bc18b5ff",
          "created_at": "2022-01-24T17:28:10.942Z",
          "updated_at": "2022-01-24T17:28:10.942Z"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "isAdm": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time "
          },
          "updated_at": {
            "type": "string",
            "format": "date-time "
          }
        },
        "example": {
          "id": "9abb39a7-eb41-42ca-9c94-81a9bc18b5ff",
          "name": "Kenzie Teste",
          "email": "kenzie@email.com",
          "isAdm": false,
          "isActive": true,
          "created_at": "2022-01-24T17:28:10.942Z",
          "updated_at": "2022-01-24T17:28:10.942Z"
        }
      },
      "UpdateUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "example": {
              "name": "Kenzie Update",
              "email": "kenzie-update@email.com"
            }
          }
        ]
      },
      "UserAdm": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "example": {
              "isAdm": true
            }
          }
        ]
      },
      "ArrayOfUsers": {
        "type": "array",
        "items": {
          "type": "object",
          "$ref": "#/components/schemas/User"
        },
        "example": [
          {
            "id": "9abb39a7-eb41-42ca-9c94-81a9bc18b5ff",
            "name": "Kenzie Teste",
            "email": "kenzie@email.com",
            "isAdm": false,
            "isActive": true,
            "created_at": "2022-01-24T17:28:10.942Z",
            "updated_at": "2022-01-24T17:28:10.942Z"
          },
          {
            "id": "50e9c668-1514-48a0-8709-db5727d19b14",
            "name": "Wander Moreira",
            "email": "wander@email.com",
            "isAdm": false,
            "isActive": true,
            "created_at": "2022-01-24T17:25:21.084Z",
            "updated_at": "2022-01-24T17:25:21.084Z"
          },
          {
            "id": "2e55b69c-9d3c-4d02-a2da-ea9b155def3a",
            "name": "Kenzie Adm",
            "email": "kenzieadm@email.com",
            "isAdm": true,
            "isActive": true,
            "created_at": "2022-01-24T17:33:19.016Z",
            "updated_at": "2022-01-24T17:33:19.016Z"
          }
        ]
      },
      "NewPassword": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirmation": {
            "type": "string"
          }
        },
        "example": {
          "token": "$2b$08$yuGTSCOL2vT1sD0TdHsBGOlk0q/CDehVP7G2GdAAQ/gqRRu8Yy5I2",
          "password": "1234cdef",
          "confirmation": "1234cdef"
        }
      },
      "DisableUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "example": {
              "isActive": false
            }
          }
        ]
      },

      "Product": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time "
          },
          "updated_at": {
            "type": "string",
            "format": "date-time "
          }
        },
        "example": {
          "name": "Pizza de Calabresa",
          "description": "Calabresa fatiada, mussarela, molho de tomate.",
          "price": 50,
          "id": "073273f2-1984-4d1f-8326-1411880dc7b4",
          "created_at": "2022-01-24T21:37:17.251Z",
          "updated_at": "2022-01-24T21:37:17.251Z"
        }
      },
      "NewProduct": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description":{
            "type": "string"
          },
          "price": {
            "type": "integer"
          }
        },
        "example": {
          "name": "Pizza de Calabresa",
          "description": "Calabresa fatiada, mussarela, molho de tomate.",
          "price": 50
        }
      },
      "UpdateProduct": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description":{
            "type": "string"
          },
          "price": {
            "type": "integer"
          }
        },
        "example": {
          "name": "Pizza de Atum",
          "description": "Atum desfiado, molho de tomate.",
          "price": 45
        }
      },
      "ArrayOfProducts": {
        "type": "array",
        "items": {
          "type": "object",
          "$ref": "#/components/schemas/Product"
        },
        "example": [
          {
            "id": "073273f2-1984-4d1f-8326-1411880dc7b4",
            "name": "Pizza de Calabresa",
            "description": "Calabresa fatiada, mussarela, molho de tomate.",
            "price": "50.00",
            "created_at": "2022-01-24T21:37:17.251Z",
            "updated_at": "2022-01-24T21:37:17.251Z"
          },
          {
            "id": "2e55b69c-9d3c-4d02-a2da-ea9b155def3a",
            "name": "Pizza de Frango",
            "description": "Frango desfiado, catupiry, molho de tomate.",
            "price": "65.00",
            "created_at": "2022-07-04T01:37:17.001Z",
            "updated_at": "2022-10-23T20:40:06.865Z"
          }
        ]
      },

      "NewOrder": {
        "type": "object",
        "properties": {
          "order": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "quantity": { "type": "integer", "default": 1 }
            }
          },
          "products": {
            "type": "array",
            "properties": {
              "city": { "type": "string" },
              "street": { "type": "string" },
              "integer": { "type": "integer" }
            }
          }
        },
        "example": {
          "order": {
            "city": "cidade teste",
            "street": "rua teste",
            "number": 42
          },
          "products": [
            {
              "id": "9b51b6b3-1bae-4a9f-90b3-c324e12e3411"
            },
            {
              "id": "2613ad7d-92ea-42ae-8664-5d1fa649109f",
              "quantity": 2
            }
          ]
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "city": {
            "type": "string"
          },
          "string": {
            "type": "string"
          },
          "integer": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "sent", "failed"],
            "default": "pending"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "$ref": "#/components/schemas/ArrayOfProducts"
          },
          "subtotal": {
            "type": "integer"
          }
        },
        "example": {
          "id": "277c540a-49ea-4313-9353-89ed87cd4c37",
          "userId": "6f7b294a-f200-45da-ab32-d23d6d3c34d6",
          "city": "teste cidade",
          "street": "teste cidade",
          "number": 42,
          "status": "pending",
          "created_at": "2022-01-26T16:52:59.999Z",
          "updated_at": "2022-01-26T16:52:59.999Z",
          "products": [
            {
              "quantity": 1,
              "product": {
                "id": "9b51b6b3-1bae-4a9f-90b3-c324e12e3411",
                "name": "Pizza de Calabresa",
                "description": "Calabresa ralado, mussarela, molho de tomate.",
                "price": "39.00",
                "created_at": "2022-01-25T21:14:27.550Z",
                "updated_at": "2022-01-25T21:14:27.550Z"
              }
            },
            {
              "quantity": 2,
              "product": {
                "id": "2613ad7d-92ea-42ae-8664-5d1fa649109f",
                "name": "Pizza de Mussarela",
                "description": "Mussarela ralado, azeitona, molho de tomate.",
                "price": "39.00",
                "created_at": "2022-01-25T21:14:48.276Z",
                "updated_at": "2022-01-25T21:14:48.276Z"
              }
            }
          ],
          "subtotal": 117
        }
      },
      "UpdateOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Order"
          },
          {
            "example": {
              "status": "failed"
            }
          }
        ]
      },
      "ArrayOfOrders": {
        "type": "array",
        "items": {
          "type": "object",
          "$ref": "#/components/schemas/Order"
        },
        "example": [
          {
            "id": "277c540a-49ea-4313-9353-89ed87cd4c37",
            "userId": "6f7b294a-f200-45da-ab32-d23d6d3c34d6",
            "city": "teste cidade",
            "street": "teste cidade",
            "number": 42,
            "status": "pending",
            "created_at": "2022-01-26T16:52:59.999Z",
            "updated_at": "2022-01-26T16:52:59.999Z",
            "products": [
              {
                "quantity": 1,
                "product": {
                  "id": "9b51b6b3-1bae-4a9f-90b3-c324e12e3411",
                  "name": "Pizza de Calabresa",
                  "description": "Calabresa ralado, mussarela, molho de tomate.",
                  "price": "39.00",
                  "created_at": "2022-01-25T21:14:27.550Z",
                  "updated_at": "2022-01-25T21:14:27.550Z"
                }
              },
              {
                "quantity": 2,
                "product": {
                  "id": "2613ad7d-92ea-42ae-8664-5d1fa649109f",
                  "name": "Pizza de Mussarela",
                  "description": "Mussarela ralado, azeitona, molho de tomate.",
                  "price": "39.00",
                  "created_at": "2022-01-25T21:14:48.276Z",
                  "updated_at": "2022-01-25T21:14:48.276Z"
                }
              }
            ],
            "subtotal": 117
          },
          {
            "id": "98935f45-baab-41cb-8640-c33df388089a",
            "userId": "6f7b294a-f200-45da-ab32-d23d6d3c34d6",
            "city": "teste cidade1",
            "street": "teste cidade1",
            "number": 42,
            "status": "pending",
            "created_at": "2022-01-26T18:40:53.039Z",
            "updated_at": "2022-01-26T18:40:53.039Z",
            "products": [
              {
                "quantity": 1,
                "product": {
                  "id": "0aaf9f09-89b5-41b7-988d-19448bfedb36",
                  "name": "Pizza de Alho",
                  "description": "Alho ralado, mussarela, molho de tomate.",
                  "price": "19.00",
                  "created_at": "2022-01-25T21:14:10.729Z",
                  "updated_at": "2022-01-25T21:14:10.729Z"
                }
              },
              {
                "quantity": 1,
                "product": {
                  "id": "2613ad7d-92ea-42ae-8664-5d1fa649109f",
                  "name": "Pizza de Mussarela",
                  "description": "Mussarela ralado, azeitona, molho de tomate.",
                  "price": "39.00",
                  "created_at": "2022-01-25T21:14:48.276Z",
                  "updated_at": "2022-01-25T21:14:48.276Z"
                }
              }
            ],
            "subtotal": 58
          }
        ]
      },

      "NewAddress": {
        "type": "object",
        "properties": {
          "city": { "type": "string" },
          "street": { "type": "string" },
          "number": { "type": "integer" }
        },
        "example": {
          "city": "cidade teste",
          "street": "rua teste",
          "number": 42
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "city": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "number": {
            "type": "integer"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "format": "uuid" }
            }
          }
        },
        "example": {
          "userId": "6f7b294a-f200-45da-ab32-d23d6d3c34d6",
          "city": "cidade teste",
          "street": "rua teste",
          "number": 42,
          "user": {
            "id": "6f7b294a-f200-45da-ab32-d23d6d3c34d6"
          },
          "id": "3281b7d6-288c-4076-a49d-b2f500b524a3"
        }
      },
      "UpdateAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Address"
          },
          {
            "example": {
              "city": "cidade update",
              "street": "rua update"
            }
          }
        ]
      },
      "ArrayOfAddress": {
        "type": "array",
        "items": {
          "type": "object",
          "$ref": "#/components/schemas/Address"
        },
        "example": [
          {
            "id": "3281b7d6-288c-4076-a49d-b2f500b524a3",
            "userId": "6f7b294a-f200-45da-ab32-d23d6d3c34d6",
            "city": "cidade update",
            "street": "rua update",
            "number": 42
          },
          {
            "id": "a25f48fe-0afa-45f3-a062-7c0bef88d9f4",
            "userId": "6f7b294a-f200-45da-ab32-d23d6d3c34d6",
            "city": "cidade teste2",
            "street": "rua teste2",
            "number": 42
          }
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
